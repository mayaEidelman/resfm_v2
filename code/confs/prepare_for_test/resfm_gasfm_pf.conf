exp_name = RESfM_GASFM_PF
random_seed = 20
dataset {
  dataset = "megadepth"
  use_gt = false
  remove_outliers_gt = False
  calibrated = true
  dataloader_num_workers = 8
  batch_size = 4
  min_sample_size = 0.1
  max_sample_size = 0.2
  compute_pairwise = true
  # scene = "AlcatrazCourtyard" 


# For training
  train_set = ["0156 new"]
  validation_set = [
      "0007_300 new", "0076 new", "0455_300 new", "5004 new",
    "0012_300 new", "0080_300 new", "0185 new", "5005 new",
    "0015_300 new", "0083 new", "5006 new",
    "0019_300 new", "0094 new", "0197 new", "5007 new",
    "0022_300 new", "0099_300 new", "0290 new", "0496_300 new", "5008 new",
    "0024 new", "0102_300 new", "0205 new", "0299_300 new", "5009 new",
    "0104_300 new", "5010 new",
    "0046 new", "0327_300 new", "5011 new",
    "0130_300 new", "0223 new", "1001_300 new", "5012 new",
    "0048 new", "0147_300 new", "1589_300 new", "5013 new",
    "0148_300 new", "0231_300 new", "0377_300 new", "5000 new", "5015 new",
    "0060 new", "0238 new", "0411_300 new", "5001 new", "5016 new",
    "0240_300 new", "5002 new", "5018 new",
    "0063_300 new", "0176_300 new", "0265 new", "0446_300 new", "5003 new"
]
  test_set = ["5015 new"]

  # For fine-tuneing
  # train_set = ["0156 new"]
  # validation_set = ["5015 new", "0176_300 new", "0299_300 new", "0290 new"]
  # test_set = [
#     '0007_300 new', '0076 new', '0455_300 new', '5004 new',
#     '0012_300 new', '0080_300 new', '0185 new', '5005 new',
#     '0015_300 new', '0083 new', '5006 new',
#     '0019_300 new', '0094 new', '0197 new', '5007 new',
#     '0022_300 new', '0099_300 new', '0290 new', '0496_300 new', '5008 new',
#     '0024 new', '0102_300 new', '0205 new', '0299_300 new', '5009 new',
#     '0104_300 new', '5010 new',
#     '0046 new', '0327_300 new', '5011 new',
#     '0130_300 new', '0223 new', '1001_300 new', '5012 new',
#     '0048 new', '0147_300 new', '1589_300 new', '5013 new',
#     '0148_300 new', '0231_300 new', '0377_300 new', '5000 new', '5015 new',
#     '0060 new', '0238 new', '0411_300 new', '5001 new', '5016 new',
#     '0240_300 new', '5002 new', '5018 new',
#     '0063_300 new', '0176_300 new', '0265 new', '0446_300 new', '5003 new'
# ]
  # For debugging
  # train_set = ["0012_300 new"]
  # validation_set = ["0012_300 new"]
  # test_set = ["0012_300 new"]
}
model {
  type = "graph_attn_sfm.GraphAttnSfMNet"
  n_heads = 4
  stateful_global_features = true
  global2view_and_global2scenepoint_enabled = false
  n_feat_proj = 32
  n_feat_scenepoint = 64
  n_feat_view = 1024
  n_feat_global = 2048
  num_layers = 9
  embed_pairwise = true
  num_features = 256
  multires = 0
  n_hidden_layers_scenepoint_update = 0
  n_hidden_layers_view_update = 0
  n_hidden_layers_global_update = 0
  n_hidden_layers_proj_update = 0
  use_norm_proj_update = true
  add_residual_skipconn_proj_update = true
  add_skipconn_from_init_projfeat = true
  pos_emb_n_freq = 0
  depth_head {
    enabled = false
    n_feat = 128
    n_hidden_layers = 2
  }
  view_head {
    enabled = true
    n_hidden_layers = 2
    rot_representation = "quat"
  }
  scenepoint_head {
    enabled = true
    n_hidden_layers = 2
  }
}
train {
  lr = 0.0001
  num_of_epochs = 20000
  scheduler_milestone = [10000, 11000, 12000, 13000, 14000, 15000, 16000, 17000, 18000, 19000, 20000]
  gamma = 0.9
  eval_intervals = 500
  optimization_num_of_epochs = 1001
  optimization_eval_intervals = 250
  validation_metric = ["Accuracy"]
  validation_metric_fine_tuning = ["our_repro"]
  optimization_lr = 5e-3
  lr_schedule {
    lr_warmup_n_steps = 2500
    main_scheduler = "exponential"
    exp_n_steps = 35000
    exp_gamma_after_n_steps = 0.1
  }
  sequentially_increment_views = false
  outlier_injection_rate = null
  n_epochs = 100000
  print_interval = 100
  dump_model_interval = 2500
  dump_and_plot_pred_interval = 2500
}
eval {
  eval_interval = 250
  calc_reprojerr_with_gtposes_for_depth_pred = false
  eval_init = true
}
memory {
  tb_log_training_memory_consumption = true
  stdout_log_eval_memory_consumption = true
  post_train_eval_no_crash_on_scene_exhausting_memory = true
}
loss {
  func = "CombinedLoss_outliers"
  infinity_pts_margin = 0.0001
  pts_grad_equalization_pre_perspective_divide = true
  normalize_grad_wrt_valid_projections_only = True

  pairwise_rotation_weight = 1
  pairwise_translation_angle_weight = 1
  pairwise_translation_magnitude_weight = 1

  grad_clip_mode = null
  hinge_loss = true
  hinge_loss_weight = 1
  normalize_grad = True

  reproj_loss_weight= 0.8
  classification_loss_weight = 0.1
  pairwise_loss_weight = 0.1
  pairwise_consistency_loss_weight = 0.1
}
ba {
  run_ba = true
  print_out = true
  repeat = true
  triangulation = false
  only_last_eval = true
  filter_outliers = 5.0
}
test
{
    outliers_threshold = 0.6
}
